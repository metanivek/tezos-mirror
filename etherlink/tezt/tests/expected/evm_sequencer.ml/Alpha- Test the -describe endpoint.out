
./octez-client rpc list

Available services:
  
  - POST /
      JSONRPC endpoint 
  - GET /configuration
      configuration 
  + evm/
    - GET /evm/blueprint/<uint63>
        Fetch the contents of a blueprint 
    - GET /evm/blueprints
        Watch for new blueprints 
    - GET /evm/blueprints/range
        Fetch a sequence of consecutive blueprints, starting from (and
        containing at least the blueprint for) a given level 
    - GET /evm/messages
        Watch for new messages 
    - GET /evm/smart_rollup_address
        Get the address of the smart rollup hosting the chain 
    - GET /evm/time_between_blocks
        Get the maximum time between two blocks 
  - GET /health_check
      Assess the health of the RPC server 
  + tezlink/
    - /tezlink/chains/<chain_id>/blocks/<block_id> <dynamic>
    - GET /tezlink/chains/<chain_id>/chain_id
        The chain unique identifier. 
    - GET /tezlink/describe
        RPCs documentation and input/output schema 
    - GET /tezlink/monitor/bootstrapped
        Wait for the node to have synchronized its chain with a few peers
        (configured by the node's administrator), streaming head updates that
        happen during the bootstrapping process, and closing the stream at
        the end. If the node was already bootstrapped, returns the current
        head immediately. 
    - GET /tezlink/monitor/heads/<chain_id>
        Monitor all blocks that are successfully validated and applied by the
        node and selected as the new head of the given chain. 
    - GET /tezlink/version
        Get information on the node version 
  - GET /version
      version 


Dynamic parameter description:
  
  <block_id>
      A block identifier. This can take one of the following
      values:
	1.Block-hash - Hash in Base58Check notation.
	2.Alias - One of
      the following:'genesis/ head/ caboose/ savepoint/
      checkpoint'.
	3.Block-level - index(integer) in the chain.
	One can
      also specify the relative positions of block with respect to above
      three block identifiers. For ex. 'checkpoint~N' or checkpoint+N, where
      N is an integer, denotes the Nth block before(~) or after (+) the
      checkpoint. 
  <chain_id>
      A chain identifier. This is either a chain hash in Base58Check notation
      or a one the predefined aliases: 'main', 'test'. 
  uint63

Warning:
  Failed to acquire the protocol version from the node
  Did not find service: GET http://[HOST]:[PORT]/chains/main/blocks/head/protocols


./octez-client rpc list

Available services:
  
  - /chains/<chain_id>/blocks/<block_id> <dynamic>
  - GET /chains/<chain_id>/chain_id
      The chain unique identifier. 
  - GET /monitor/bootstrapped
      Wait for the node to have synchronized its chain with a few peers
      (configured by the node's administrator), streaming head updates that
      happen during the bootstrapping process, and closing the stream at the
      end. If the node was already bootstrapped, returns the current head
      immediately. 
  - GET /monitor/heads/<chain_id>
      Monitor all blocks that are successfully validated and applied by the
      node and selected as the new head of the given chain. 
  - GET /version
      Get information on the node version 


Dynamic parameter description:
  
  <block_id>
      A block identifier. This can take one of the following
      values:
	1.Block-hash - Hash in Base58Check notation.
	2.Alias - One of
      the following:'genesis/ head/ caboose/ savepoint/
      checkpoint'.
	3.Block-level - index(integer) in the chain.
	One can
      also specify the relative positions of block with respect to above
      three block identifiers. For ex. 'checkpoint~N' or checkpoint+N, where
      N is an integer, denotes the Nth block before(~) or after (+) the
      checkpoint. 
  <chain_id>
      A chain identifier. This is either a chain hash in Base58Check notation
      or a one the predefined aliases: 'main', 'test'. 

