
./octez-client rpc list

Available services:
  
  - POST /
      JSONRPC endpoint 
  - GET /configuration
      configuration 
  + evm/
    - GET /evm/blueprint/<uint63>
        Fetch the contents of a blueprint 
    - GET /evm/blueprints
        Watch for new blueprints 
    - GET /evm/blueprints/range
        Fetch a sequence of consecutive blueprints, starting from (and
        containing at least the blueprint for) a given level 
    - GET /evm/messages
        Watch for new messages 
    - GET /evm/smart_rollup_address
        Get the address of the smart rollup hosting the chain 
    - GET /evm/time_between_blocks
        Get the maximum time between two blocks 
  - GET /health_check
      Assess the health of the RPC server 
  + tezlink/
    + chains/<chain_id>/
      + blocks/<block_id>/
        + context/
          - GET /tezlink/chains/<chain_id>/blocks/<block_id>/context/constants
              All constants 
          - GET /tezlink/chains/<chain_id>/blocks/<block_id>/context/contracts/<contract_id>/balance
              The spendable balance of a contract (in mutez), also known as
              liquid balance. Corresponds to tez owned by the contract that
              are neither staked, nor in unstaked requests, nor in frozen
              bonds. Identical to the 'spendable' RPC. 
          - GET /tezlink/chains/<chain_id>/blocks/<block_id>/context/contracts/<contract_id>/manager_key
              Access the manager of an implicit contract. 
        - GET /tezlink/chains/<chain_id>/blocks/<block_id>/helpers/current_level
            Returns the level of the interrogated block, or the one of a
            block located `offset` blocks after it in the chain. For
            instance, the next block if `offset` is 1. The offset cannot be
            negative. 
        - GET /tezlink/chains/<chain_id>/blocks/<block_id>/protocols
            Current and next protocol. 
      - GET /tezlink/chains/<chain_id>/chain_id
          The chain unique identifier. 
    - GET /tezlink/describe
        RPCs documentation and input/output schema 
    - GET /tezlink/version
        Get information on the node version 
  - GET /version
      version 


Dynamic parameter description:
  
  <contract_id>
      A contract identifier encoded in b58check. 
  <block_id>
      A block identifier. This can take one of the following
      values:
	1.Block-hash - Hash in Base58Check notation.
	2.Alias - One of
      the following:'genesis/ head/ caboose/ savepoint/
      checkpoint'.
	3.Block-level - index(integer) in the chain.
	One can
      also specify the relative positions of block with respect to above
      three block identifiers. For ex. 'checkpoint~N' or checkpoint+N, where
      N is an integer, denotes the Nth block before(~) or after (+) the
      checkpoint. 
  <chain_id>
      A chain identifier. This is either a chain hash in Base58Check notation
      or a one the predefined aliases: 'main', 'test'. 
  uint63

Warning:
  Failed to acquire the protocol version from the node
  Did not find service: GET http://[HOST]:[PORT]/chains/main/blocks/head/protocols


./octez-client rpc list

Available services:
  
  + chains/<chain_id>/
    + blocks/<block_id>/
      + context/
        - GET /chains/<chain_id>/blocks/<block_id>/context/constants
            All constants 
        - GET /chains/<chain_id>/blocks/<block_id>/context/contracts/<contract_id>/balance
            The spendable balance of a contract (in mutez), also known as
            liquid balance. Corresponds to tez owned by the contract that are
            neither staked, nor in unstaked requests, nor in frozen bonds.
            Identical to the 'spendable' RPC. 
        - GET /chains/<chain_id>/blocks/<block_id>/context/contracts/<contract_id>/manager_key
            Access the manager of an implicit contract. 
      - GET /chains/<chain_id>/blocks/<block_id>/helpers/current_level
          Returns the level of the interrogated block, or the one of a block
          located `offset` blocks after it in the chain. For instance, the
          next block if `offset` is 1. The offset cannot be negative. 
      - GET /chains/<chain_id>/blocks/<block_id>/protocols
          Current and next protocol. 
    - GET /chains/<chain_id>/chain_id
        The chain unique identifier. 
  - GET /version
      Get information on the node version 


Dynamic parameter description:
  
  <contract_id>
      A contract identifier encoded in b58check. 
  <block_id>
      A block identifier. This can take one of the following
      values:
	1.Block-hash - Hash in Base58Check notation.
	2.Alias - One of
      the following:'genesis/ head/ caboose/ savepoint/
      checkpoint'.
	3.Block-level - index(integer) in the chain.
	One can
      also specify the relative positions of block with respect to above
      three block identifiers. For ex. 'checkpoint~N' or checkpoint+N, where
      N is an integer, denotes the Nth block before(~) or after (+) the
      checkpoint. 
  <chain_id>
      A chain identifier. This is either a chain hash in Base58Check notation
      or a one the predefined aliases: 'main', 'test'. 

